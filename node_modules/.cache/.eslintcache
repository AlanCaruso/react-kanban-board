[{"/Users/ilen/Desktop/GitHub/challenge-kanban/src/index.js":"1","/Users/ilen/Desktop/GitHub/challenge-kanban/src/reportWebVitals.js":"2","/Users/ilen/Desktop/GitHub/challenge-kanban/src/MainApp.js":"3","/Users/ilen/Desktop/GitHub/challenge-kanban/src/kanbanContext.js":"4","/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/BoardApp.js":"5","/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/FormTaks.js":"6","/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/Tasks.js":"7","/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/Item.js":"8","/Users/ilen/Desktop/GitHub/challenge-kanban/src/hooks/useForm.js":"9","/Users/ilen/Desktop/GitHub/react-kanban-board/src/index.js":"10","/Users/ilen/Desktop/GitHub/react-kanban-board/src/MainApp.js":"11","/Users/ilen/Desktop/GitHub/react-kanban-board/src/reportWebVitals.js":"12","/Users/ilen/Desktop/GitHub/react-kanban-board/src/kanbanContext.js":"13","/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/BoardApp.js":"14","/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/FormTaks.js":"15","/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/Tasks.js":"16","/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/Item.js":"17","/Users/ilen/Desktop/GitHub/react-kanban-board/src/hooks/useForm.js":"18"},{"size":284,"mtime":1683839571322,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1683839580087,"results":"21","hashOfConfig":"20"},{"size":723,"mtime":1683839576922,"results":"22","hashOfConfig":"20"},{"size":89,"mtime":1683839574129,"results":"23","hashOfConfig":"20"},{"size":3148,"mtime":1683839544657,"results":"24","hashOfConfig":"20"},{"size":1234,"mtime":1683840786434,"results":"25","hashOfConfig":"20"},{"size":1175,"mtime":1683839564168,"results":"26","hashOfConfig":"20"},{"size":2450,"mtime":1683842415574,"results":"27","hashOfConfig":"20"},{"size":408,"mtime":1683839568559,"results":"28","hashOfConfig":"20"},{"size":284,"mtime":1683839571322,"results":"29","hashOfConfig":"30"},{"size":726,"mtime":1684194654410,"results":"31","hashOfConfig":"30"},{"size":364,"mtime":1683839580087,"results":"32","hashOfConfig":"30"},{"size":89,"mtime":1683839574129,"results":"33","hashOfConfig":"30"},{"size":3148,"mtime":1683839544657,"results":"34","hashOfConfig":"30"},{"size":1234,"mtime":1683840786434,"results":"35","hashOfConfig":"30"},{"size":1175,"mtime":1683839564168,"results":"36","hashOfConfig":"30"},{"size":2450,"mtime":1683842415574,"results":"37","hashOfConfig":"30"},{"size":408,"mtime":1683839568559,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iymair",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oma7p9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ilen/Desktop/GitHub/challenge-kanban/src/index.js",[],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/reportWebVitals.js",[],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/MainApp.js",[],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/kanbanContext.js",[],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/BoardApp.js",["77"],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/FormTaks.js",[],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/Tasks.js",[],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/components/Item.js",["78"],"/Users/ilen/Desktop/GitHub/challenge-kanban/src/hooks/useForm.js",[],"/Users/ilen/Desktop/GitHub/react-kanban-board/src/index.js",[],"/Users/ilen/Desktop/GitHub/react-kanban-board/src/MainApp.js",[],"/Users/ilen/Desktop/GitHub/react-kanban-board/src/reportWebVitals.js",[],"/Users/ilen/Desktop/GitHub/react-kanban-board/src/kanbanContext.js",[],"/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/BoardApp.js",["79"],"import React, { useContext, useState, useCallback, useEffect } from \"react\";\n\nimport { KanbanContext } from \"./../kanbanContext\";\nimport { Tasks } from \"./Tasks\";\nimport { Item } from \"./Item\";\nimport { FormTaks } from \"./FormTaks\";\n\nimport \"./css/style.css\";\n\nexport const BoardApp = () => {\n  const { tasks, setTasks } = useContext(KanbanContext);\n\n  const [taskStateColum, setTaskStateColum] = useState({});\n\n  const manageStateColumn = useCallback(\n    (s) => {\n      setTaskStateColum(s);\n    },\n    [setTaskStateColum]\n  );\n\n  const update = (tasks) =>\n    tasks.map((item) => {\n      if (item.id === parseInt(taskStateColum.task_id, 10)) {\n        return { ...item, status: taskStateColum.status };\n      }\n      return item;\n    });\n\n  useEffect(() => {\n    setTasks(update);\n  }, [taskStateColum, setTasks]);\n\n  return (\n    <div className=\"wrapper\">\n      <FormTaks tasks={tasks} setTask={setTasks} />\n      <div className=\"kanban\">\n        <Tasks\n          id=\"sinrealizar\"\n          className=\"columns\"\n          title=\"Sin Realizar\"\n          tasks={tasks}\n          setTask={setTasks}\n          manageStateColumn={manageStateColumn}\n        >\n          {tasks.length > 0 &&\n            tasks\n              .filter((item) => item.status === 1)\n              .map((item) => (\n                <Item\n                  id={item.id}\n                  draggable=\"true\"\n                  key={item.id}\n                  item={item}\n                  setTasks={setTasks}\n                  boardname=\"sinrealizar\"\n                  tasks={tasks}\n                  manageStateColumn={manageStateColumn}\n                />\n              ))}\n        </Tasks>\n        <Tasks\n          id=\"enproceso\"\n          className=\"columns\"\n          title=\"En proceso\"\n          tasks={tasks}\n          setTask={setTasks}\n          boardname=\"enproceso\"\n          manageStateColumn={manageStateColumn}\n        >\n          {tasks.length > 0 &&\n            tasks\n              .filter((item) => item.status === 2)\n              .map((item) => (\n                <Item\n                  id={item.id}\n                  draggable=\"true\"\n                  key={item.id}\n                  item={item}\n                  tasks={tasks}\n                  setTasks={setTasks}\n                  boardname=\"enproceso\"\n                  manageStateColumn={manageStateColumn}\n                />\n              ))}\n        </Tasks>\n        <Tasks\n          id=\"finalizado\"\n          className=\"columns\"\n          title=\"Finalizado\"\n          tasks={tasks}\n          setTask={setTasks}\n          manageStateColumn={manageStateColumn}\n        >\n          {tasks.length > 0 &&\n            tasks\n              .filter((item) => item.status === 3)\n              .map((item) => (\n                <Item\n                  id={item.id}\n                  draggable=\"true\"\n                  key={item.id}\n                  item={item}\n                  tasks={tasks}\n                  setTasks={setTasks}\n                  boardname=\"finalizado\"\n                  manageStateColumn={manageStateColumn}\n                />\n              ))}\n        </Tasks>\n      </div>\n    </div>\n  );\n};\n","/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/FormTaks.js",[],"/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/Tasks.js",[],"/Users/ilen/Desktop/GitHub/react-kanban-board/src/components/Item.js",["80"],"import React from \"react\";\n\nexport const Item = ({\n  id,\n  boardname,\n  item,\n  tasks,\n  setTasks,\n  manageStateColumn,\n}) => {\n  const { taskDescription } = item;\n  const dragStart = (e) => {\n    const target = e.target;\n    e.dataTransfer.setData(\"task_id\", target.id);\n  };\n  const dragOver = (e) => {\n    e.stopPropagation();\n  };\n  const deleteTask = (e) => {\n    e.preventDefault();\n    setTasks(tasks.filter((el) => el.id !== item.id));\n  };\n  const handleStatusTask = (task_id, status) => {\n    manageStateColumn({ task_id, status });\n  };\n  return (\n    <div\n      id={id}\n      className=\"row\"\n      draggable=\"true\"\n      onDragStart={dragStart}\n      onDragOver={dragOver}\n    >\n      <div className=\"task-item\">\n        <h2 className=\"task-title\">{taskDescription}</h2>\n        <div className=\"task-actions\">\n          {boardname === \"sinrealizar\" && (\n            <>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => handleStatusTask(id, 2)}\n              >\n                En proceso\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => handleStatusTask(id, 3)}\n              >\n                Finalizado\n              </button>\n            </>\n          )}\n          {boardname === \"enproceso\" && (\n            <>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => handleStatusTask(id, 1)}\n              >\n                Sin realizar\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => handleStatusTask(id, 3)}\n              >\n                Finalizado\n              </button>\n            </>\n          )}\n          {boardname === \"finalizado\" && (\n            <>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => handleStatusTask(id, 2)}\n              >\n                En proceso\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => handleStatusTask(id, 1)}\n              >\n                Sin finalizar\n              </button>\n            </>\n          )}\n          <img\n            className=\"btn-delete\"\n            onClick={deleteTask}\n            src=\"https://cdn-icons-png.flaticon.com/512/7666/7666109.png\"\n          ></img>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/ilen/Desktop/GitHub/react-kanban-board/src/hooks/useForm.js",[],{"ruleId":"81","severity":1,"message":"82","line":32,"column":6,"nodeType":"83","endLine":32,"endColumn":32,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":85,"column":11,"nodeType":"87","endLine":89,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":32,"column":6,"nodeType":"83","endLine":32,"endColumn":32,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"86","line":85,"column":11,"nodeType":"87","endLine":89,"endColumn":12},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.","ArrayExpression",["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["90"],{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},"Update the dependencies array to be: [taskStateColum, setTasks, update]",{"range":"94","text":"95"},{"range":"96","text":"95"},[789,815],"[taskStateColum, setTasks, update]",[789,815]]