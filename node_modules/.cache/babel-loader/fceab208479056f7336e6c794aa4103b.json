{"ast":null,"code":"var _jsxFileName = \"/Users/ilen/Desktop/GitHub/challenge-kanban/src/MainApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { KanbanContext } from \"./kanbanContext\";\nimport { BoardApp } from \"./components/BoardApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainApp = () => {\n  _s();\n  const initialTask = [{\n    id: Math.floor((1 + Math.random()) * 0x10000),\n    taskDescription: \"test1\",\n    status: 1\n  }, {\n    id: Math.floor((1 + Math.random()) * 0x10000),\n    taskDescription: \"test2\",\n    status: 1\n  }, {\n    id: Math.floor((1 + Math.random()) * 0x10000),\n    taskDescription: \"test3\",\n    status: 1\n  }];\n  const [tasks, setTasks] = useState(initialTask);\n  return /*#__PURE__*/_jsxDEV(KanbanContext.Provider, {\n    value: {\n      tasks,\n      setTasks\n    },\n    children: /*#__PURE__*/_jsxDEV(BoardApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MainApp, \"aj3nXjWIvxluKyla/fCgzlb1T2I=\");\n_c = MainApp;\nvar _c;\n$RefreshReg$(_c, \"MainApp\");","map":{"version":3,"names":["React","useState","KanbanContext","BoardApp","jsxDEV","_jsxDEV","MainApp","_s","initialTask","id","Math","floor","random","taskDescription","status","tasks","setTasks","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ilen/Desktop/GitHub/challenge-kanban/src/MainApp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { KanbanContext } from \"./kanbanContext\";\nimport { BoardApp } from \"./components/BoardApp\";\n\nexport const MainApp = () => {\n    const initialTask = [\n        {\n            id: Math.floor((1 + Math.random()) * 0x10000),\n            taskDescription: \"test1\",\n            status: 1,\n        },\n        {\n            id: Math.floor((1 + Math.random()) * 0x10000),\n            taskDescription: \"test2\",\n            status: 1,\n        },\n        {\n            id: Math.floor((1 + Math.random()) * 0x10000),\n            taskDescription: \"test3\",\n            status: 1,\n        },\n    ];\n\n    const [tasks, setTasks] = useState(initialTask);\n    return (\n        <KanbanContext.Provider value={{ tasks, setTasks }}>\n            <BoardApp />\n        </KanbanContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,WAAW,GAAG,CAChB;IACIC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;IAC7CC,eAAe,EAAE,OAAO;IACxBC,MAAM,EAAE;EACZ,CAAC,EACD;IACIL,EAAE,EAAEC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;IAC7CC,eAAe,EAAE,OAAO;IACxBC,MAAM,EAAE;EACZ,CAAC,EACD;IACIL,EAAE,EAAEC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;IAC7CC,eAAe,EAAE,OAAO;IACxBC,MAAM,EAAE;EACZ,CAAC,CACJ;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACO,WAAW,CAAC;EAC/C,oBACIH,OAAA,CAACH,aAAa,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAE;IAAAG,QAAA,eAC/Cd,OAAA,CAACF,QAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjC,CAAC;AAAChB,EAAA,CAzBWD,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}